Traceback (most recent call last):
  File "C:\Users\vanna\.conda\envs\.env\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\vanna\.conda\envs\.env\Lib\site-packages\nbclient\client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\vanna\.conda\envs\.env\Lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\vanna\.conda\envs\.env\Lib\asyncio\base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\vanna\.conda\envs\.env\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\vanna\.conda\envs\.env\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\vanna\.conda\envs\.env\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from sklearn.datasets import make_regression
from sklearn.discriminant_analysis import StandardScaler
from sklearn.model_selection import train_test_split
import seaborn as sns


X, y = make_regression(n_samples=15, n_features=1,  random_state=42)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=100)
#scaling
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.fit_transform(X_test)
y_train = np.array(y_train).reshape(X_train.shape[0],1)
y_test = np.array(y_test).reshape(X_test.shape[0],1)
#TRAIN
G = AIVNGradientBooster()
X_train = np.array([0, -1, 2, 3, 4, 5, 6, 7, 8, 9]).reshape(10,1)
y_train = np.array([0, -2, 4, 6, 8, 10, 12, 14, 16, 18]).reshape(10,1)

models, losses, pred_0 = G.train(X_train,y_train)

sns.set_style('darkgrid')
ax = sns.lineplot(x=range(2),y=losses)
ax.set(xlabel='Epoch',ylabel='Loss',title='Loss vs Epoch')
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mValueError[0m                                Traceback (most recent call last)
Cell [1;32mIn[2], line 23[0m
[0;32m     20[0m models, losses, pred_0 [38;5;241m=[39m G[38;5;241m.[39mtrain(X_train,y_train)
[0;32m     22[0m sns[38;5;241m.[39mset_style([38;5;124m'[39m[38;5;124mdarkgrid[39m[38;5;124m'[39m)
[1;32m---> 23[0m ax [38;5;241m=[39m [43msns[49m[38;5;241;43m.[39;49m[43mlineplot[49m[43m([49m[43mx[49m[38;5;241;43m=[39;49m[38;5;28;43mrange[39;49m[43m([49m[38;5;241;43m2[39;49m[43m)[49m[43m,[49m[43my[49m[38;5;241;43m=[39;49m[43mlosses[49m[43m)[49m
[0;32m     24[0m ax[38;5;241m.[39mset(xlabel[38;5;241m=[39m[38;5;124m'[39m[38;5;124mEpoch[39m[38;5;124m'[39m,ylabel[38;5;241m=[39m[38;5;124m'[39m[38;5;124mLoss[39m[38;5;124m'[39m,title[38;5;241m=[39m[38;5;124m'[39m[38;5;124mLoss vs Epoch[39m[38;5;124m'[39m)

File [1;32m~\.conda\envs\.env\Lib\site-packages\seaborn\relational.py:485[0m, in [0;36mlineplot[1;34m(data, x, y, hue, size, style, units, weights, palette, hue_order, hue_norm, sizes, size_order, size_norm, dashes, markers, style_order, estimator, errorbar, n_boot, seed, orient, sort, err_style, err_kws, legend, ci, ax, **kwargs)[0m
[0;32m    471[0m [38;5;28;01mdef[39;00m [38;5;21mlineplot[39m(
[0;32m    472[0m     data[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m,
[0;32m    473[0m     x[38;5;241m=[39m[38;5;28;01mNone[39;00m, y[38;5;241m=[39m[38;5;28;01mNone[39;00m, hue[38;5;241m=[39m[38;5;28;01mNone[39;00m, size[38;5;241m=[39m[38;5;28;01mNone[39;00m, style[38;5;241m=[39m[38;5;28;01mNone[39;00m, units[38;5;241m=[39m[38;5;28;01mNone[39;00m, weights[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m   (...)[0m
[0;32m    481[0m 
[0;32m    482[0m     [38;5;66;03m# Handle deprecation of ci parameter[39;00m
[0;32m    483[0m     errorbar [38;5;241m=[39m _deprecate_ci(errorbar, ci)
[1;32m--> 485[0m     p [38;5;241m=[39m [43m_LinePlotter[49m[43m([49m
[0;32m    486[0m [43m        [49m[43mdata[49m[38;5;241;43m=[39;49m[43mdata[49m[43m,[49m
[0;32m    487[0m [43m        [49m[43mvariables[49m[38;5;241;43m=[39;49m[38;5;28;43mdict[39;49m[43m([49m
[0;32m    488[0m [43m            [49m[43mx[49m[38;5;241;43m=[39;49m[43mx[49m[43m,[49m[43m [49m[43my[49m[38;5;241;43m=[39;49m[43my[49m[43m,[49m[43m [49m[43mhue[49m[38;5;241;43m=[39;49m[43mhue[49m[43m,[49m[43m [49m[43msize[49m[38;5;241;43m=[39;49m[43msize[49m[43m,[49m[43m [49m[43mstyle[49m[38;5;241;43m=[39;49m[43mstyle[49m[43m,[49m[43m [49m[43munits[49m[38;5;241;43m=[39;49m[43munits[49m[43m,[49m[43m [49m[43mweight[49m[38;5;241;43m=[39;49m[43mweights[49m
[0;32m    489[0m [43m        [49m[43m)[49m[43m,[49m
[0;32m    490[0m [43m        [49m[43mestimator[49m[38;5;241;43m=[39;49m[43mestimator[49m[43m,[49m[43m [49m[43mn_boot[49m[38;5;241;43m=[39;49m[43mn_boot[49m[43m,[49m[43m [49m[43mseed[49m[38;5;241;43m=[39;49m[43mseed[49m[43m,[49m[43m [49m[43merrorbar[49m[38;5;241;43m=[39;49m[43merrorbar[49m[43m,[49m
[0;32m    491[0m [43m        [49m[43msort[49m[38;5;241;43m=[39;49m[43msort[49m[43m,[49m[43m [49m[43morient[49m[38;5;241;43m=[39;49m[43morient[49m[43m,[49m[43m [49m[43merr_style[49m[38;5;241;43m=[39;49m[43merr_style[49m[43m,[49m[43m [49m[43merr_kws[49m[38;5;241;43m=[39;49m[43merr_kws[49m[43m,[49m
[0;32m    492[0m [43m        [49m[43mlegend[49m[38;5;241;43m=[39;49m[43mlegend[49m[43m,[49m
[0;32m    493[0m [43m    [49m[43m)[49m
[0;32m    495[0m     p[38;5;241m.[39mmap_hue(palette[38;5;241m=[39mpalette, order[38;5;241m=[39mhue_order, norm[38;5;241m=[39mhue_norm)
[0;32m    496[0m     p[38;5;241m.[39mmap_size(sizes[38;5;241m=[39msizes, order[38;5;241m=[39msize_order, norm[38;5;241m=[39msize_norm)

File [1;32m~\.conda\envs\.env\Lib\site-packages\seaborn\relational.py:216[0m, in [0;36m_LinePlotter.__init__[1;34m(self, data, variables, estimator, n_boot, seed, errorbar, sort, orient, err_style, err_kws, legend)[0m
[0;32m    202[0m [38;5;28;01mdef[39;00m [38;5;21m__init__[39m(
[0;32m    203[0m     [38;5;28mself[39m, [38;5;241m*[39m,
[0;32m    204[0m     data[38;5;241m=[39m[38;5;28;01mNone[39;00m, variables[38;5;241m=[39m{},
[1;32m   (...)[0m
[0;32m    210[0m     [38;5;66;03m# the kind of plot to draw, but for the time being we need to set[39;00m
[0;32m    211[0m     [38;5;66;03m# this information so the SizeMapping can use it[39;00m
[0;32m    212[0m     [38;5;28mself[39m[38;5;241m.[39m_default_size_range [38;5;241m=[39m (
[0;32m    213[0m         np[38;5;241m.[39mr_[[38;5;241m.5[39m, [38;5;241m2[39m] [38;5;241m*[39m mpl[38;5;241m.[39mrcParams[[38;5;124m"[39m[38;5;124mlines.linewidth[39m[38;5;124m"[39m]
[0;32m    214[0m     )
[1;32m--> 216[0m     [38;5;28;43msuper[39;49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[38;5;21;43m__init__[39;49m[43m([49m[43mdata[49m[38;5;241;43m=[39;49m[43mdata[49m[43m,[49m[43m [49m[43mvariables[49m[38;5;241;43m=[39;49m[43mvariables[49m[43m)[49m
[0;32m    218[0m     [38;5;28mself[39m[38;5;241m.[39mestimator [38;5;241m=[39m estimator
[0;32m    219[0m     [38;5;28mself[39m[38;5;241m.[39merrorbar [38;5;241m=[39m errorbar

File [1;32m~\.conda\envs\.env\Lib\site-packages\seaborn\_base.py:634[0m, in [0;36mVectorPlotter.__init__[1;34m(self, data, variables)[0m
[0;32m    629[0m [38;5;66;03m# var_ordered is relevant only for categorical axis variables, and may[39;00m
[0;32m    630[0m [38;5;66;03m# be better handled by an internal axis information object that tracks[39;00m
[0;32m    631[0m [38;5;66;03m# such information and is set up by the scale_* methods. The analogous[39;00m
[0;32m    632[0m [38;5;66;03m# information for numeric axes would be information about log scales.[39;00m
[0;32m    633[0m [38;5;28mself[39m[38;5;241m.[39m_var_ordered [38;5;241m=[39m {[38;5;124m"[39m[38;5;124mx[39m[38;5;124m"[39m: [38;5;28;01mFalse[39;00m, [38;5;124m"[39m[38;5;124my[39m[38;5;124m"[39m: [38;5;28;01mFalse[39;00m}  [38;5;66;03m# alt., used DefaultDict[39;00m
[1;32m--> 634[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43massign_variables[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mvariables[49m[43m)[49m
[0;32m    636[0m [38;5;66;03m# TODO Lots of tests assume that these are called to initialize the[39;00m
[0;32m    637[0m [38;5;66;03m# mappings to default values on class initialization. I'd prefer to[39;00m
[0;32m    638[0m [38;5;66;03m# move away from that and only have a mapping when explicitly called.[39;00m
[0;32m    639[0m [38;5;28;01mfor[39;00m var [38;5;129;01min[39;00m [[38;5;124m"[39m[38;5;124mhue[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124msize[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mstyle[39m[38;5;124m"[39m]:

File [1;32m~\.conda\envs\.env\Lib\site-packages\seaborn\_base.py:679[0m, in [0;36mVectorPlotter.assign_variables[1;34m(self, data, variables)[0m
[0;32m    674[0m [38;5;28;01melse[39;00m:
[0;32m    675[0m     [38;5;66;03m# When dealing with long-form input, use the newer PlotData[39;00m
[0;32m    676[0m     [38;5;66;03m# object (internal but introduced for the objects interface)[39;00m
[0;32m    677[0m     [38;5;66;03m# to centralize / standardize data consumption logic.[39;00m
[0;32m    678[0m     [38;5;28mself[39m[38;5;241m.[39minput_format [38;5;241m=[39m [38;5;124m"[39m[38;5;124mlong[39m[38;5;124m"[39m
[1;32m--> 679[0m     plot_data [38;5;241m=[39m [43mPlotData[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mvariables[49m[43m)[49m
[0;32m    680[0m     frame [38;5;241m=[39m plot_data[38;5;241m.[39mframe
[0;32m    681[0m     names [38;5;241m=[39m plot_data[38;5;241m.[39mnames

File [1;32m~\.conda\envs\.env\Lib\site-packages\seaborn\_core\data.py:58[0m, in [0;36mPlotData.__init__[1;34m(self, data, variables)[0m
[0;32m     51[0m [38;5;28;01mdef[39;00m [38;5;21m__init__[39m(
[0;32m     52[0m     [38;5;28mself[39m,
[0;32m     53[0m     data: DataSource,
[0;32m     54[0m     variables: [38;5;28mdict[39m[[38;5;28mstr[39m, VariableSpec],
[0;32m     55[0m ):
[0;32m     57[0m     data [38;5;241m=[39m handle_data_source(data)
[1;32m---> 58[0m     frame, names, ids [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_assign_variables[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mvariables[49m[43m)[49m
[0;32m     60[0m     [38;5;28mself[39m[38;5;241m.[39mframe [38;5;241m=[39m frame
[0;32m     61[0m     [38;5;28mself[39m[38;5;241m.[39mnames [38;5;241m=[39m names

File [1;32m~\.conda\envs\.env\Lib\site-packages\seaborn\_core\data.py:265[0m, in [0;36mPlotData._assign_variables[1;34m(self, data, variables)[0m
[0;32m    260[0m             ids[key] [38;5;241m=[39m [38;5;28mid[39m(val)
[0;32m    262[0m [38;5;66;03m# Construct a tidy plot DataFrame. This will convert a number of[39;00m
[0;32m    263[0m [38;5;66;03m# types automatically, aligning on index in case of pandas objects[39;00m
[0;32m    264[0m [38;5;66;03m# TODO Note: this fails when variable specs *only* have scalars![39;00m
[1;32m--> 265[0m frame [38;5;241m=[39m [43mpd[49m[38;5;241;43m.[39;49m[43mDataFrame[49m[43m([49m[43mplot_data[49m[43m)[49m
[0;32m    267[0m [38;5;28;01mreturn[39;00m frame, names, ids

File [1;32m~\.conda\envs\.env\Lib\site-packages\pandas\core\frame.py:767[0m, in [0;36mDataFrame.__init__[1;34m(self, data, index, columns, dtype, copy)[0m
[0;32m    761[0m     mgr [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_init_mgr(
[0;32m    762[0m         data, axes[38;5;241m=[39m{[38;5;124m"[39m[38;5;124mindex[39m[38;5;124m"[39m: index, [38;5;124m"[39m[38;5;124mcolumns[39m[38;5;124m"[39m: columns}, dtype[38;5;241m=[39mdtype, copy[38;5;241m=[39mcopy
[0;32m    763[0m     )
[0;32m    765[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(data, [38;5;28mdict[39m):
[0;32m    766[0m     [38;5;66;03m# GH#38939 de facto copy defaults to False only in non-dict cases[39;00m
[1;32m--> 767[0m     mgr [38;5;241m=[39m [43mdict_to_mgr[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mindex[49m[43m,[49m[43m [49m[43mcolumns[49m[43m,[49m[43m [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m,[49m[43m [49m[43mcopy[49m[38;5;241;43m=[39;49m[43mcopy[49m[43m,[49m[43m [49m[43mtyp[49m[38;5;241;43m=[39;49m[43mmanager[49m[43m)[49m
[0;32m    768[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(data, ma[38;5;241m.[39mMaskedArray):
[0;32m    769[0m     [38;5;28;01mfrom[39;00m [38;5;21;01mnumpy[39;00m[38;5;21;01m.[39;00m[38;5;21;01mma[39;00m [38;5;28;01mimport[39;00m mrecords

File [1;32m~\.conda\envs\.env\Lib\site-packages\pandas\core\internals\construction.py:503[0m, in [0;36mdict_to_mgr[1;34m(data, index, columns, dtype, typ, copy)[0m
[0;32m    499[0m     [38;5;28;01melse[39;00m:
[0;32m    500[0m         [38;5;66;03m# dtype check to exclude e.g. range objects, scalars[39;00m
[0;32m    501[0m         arrays [38;5;241m=[39m [x[38;5;241m.[39mcopy() [38;5;28;01mif[39;00m [38;5;28mhasattr[39m(x, [38;5;124m"[39m[38;5;124mdtype[39m[38;5;124m"[39m) [38;5;28;01melse[39;00m x [38;5;28;01mfor[39;00m x [38;5;129;01min[39;00m arrays]
[1;32m--> 503[0m [38;5;28;01mreturn[39;00m [43marrays_to_mgr[49m[43m([49m[43marrays[49m[43m,[49m[43m [49m[43mcolumns[49m[43m,[49m[43m [49m[43mindex[49m[43m,[49m[43m [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m,[49m[43m [49m[43mtyp[49m[38;5;241;43m=[39;49m[43mtyp[49m[43m,[49m[43m [49m[43mconsolidate[49m[38;5;241;43m=[39;49m[43mcopy[49m[43m)[49m

File [1;32m~\.conda\envs\.env\Lib\site-packages\pandas\core\internals\construction.py:114[0m, in [0;36marrays_to_mgr[1;34m(arrays, columns, index, dtype, verify_integrity, typ, consolidate)[0m
[0;32m    111[0m [38;5;28;01mif[39;00m verify_integrity:
[0;32m    112[0m     [38;5;66;03m# figure out the index, if necessary[39;00m
[0;32m    113[0m     [38;5;28;01mif[39;00m index [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m--> 114[0m         index [38;5;241m=[39m [43m_extract_index[49m[43m([49m[43marrays[49m[43m)[49m
[0;32m    115[0m     [38;5;28;01melse[39;00m:
[0;32m    116[0m         index [38;5;241m=[39m ensure_index(index)

File [1;32m~\.conda\envs\.env\Lib\site-packages\pandas\core\internals\construction.py:677[0m, in [0;36m_extract_index[1;34m(data)[0m
[0;32m    675[0m lengths [38;5;241m=[39m [38;5;28mlist[39m([38;5;28mset[39m(raw_lengths))
[0;32m    676[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(lengths) [38;5;241m>[39m [38;5;241m1[39m:
[1;32m--> 677[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mAll arrays must be of the same length[39m[38;5;124m"[39m)
[0;32m    679[0m [38;5;28;01mif[39;00m have_dicts:
[0;32m    680[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[0;32m    681[0m         [38;5;124m"[39m[38;5;124mMixing dicts with non-Series may lead to ambiguous ordering.[39m[38;5;124m"[39m
[0;32m    682[0m     )

[1;31mValueError[0m: All arrays must be of the same length

